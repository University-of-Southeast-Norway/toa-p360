name: dotnet build and create release

on:
  push:
    tags:
    - 'v*'

env:
  nuget_feed_name: 'SDO'
  nuget_feed_source: 'https://pkgs.dev.azure.com/USN-SDO/_packaging/SDO/nuget/v3/index.json'
  nuget_config: 'nuget.config'
  main_proj_folder_lin: 
  main_proj_lin: $main_proj_folder_lin/*.csproj
  main_proj_folder_win: 
  main_proj_win: $main_proj_folder_win/*.csproj
  test_projects: '**/*.UnitTest.csproj'
  configuraton: Release
  framework: net6.0
  runtime_lin: linux-x64
  runtime_win: win-x64

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: [ '6.0.x' ]

    steps:
      - uses: actions/checkout@v3
      
      - name: copy _general.example.json to _general.json
        uses: canastro/copy-file-action@master
        with:
          source: "DfoToa.BatchRun/JSON/_general.example.json"
          target: "DfoToa.BatchRun/JSON/_general.json"

      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Remove existing entry from NuGet config
        run: dotnet nuget remove source ${{ env.nuget_feed_name }} --configfile ${{ env.nuget_config }}
      - name: Auth NuGet
        run: dotnet nuget add source ${{ env.nuget_feed_source }} --configfile ${{ env.nuget_config }} --name ${{ env.nuget_feed_name }} --username az --password ${{ secrets.AZURE_DEVOPS_TOKEN }} --store-password-in-clear-text
      - name: Restore NuGet Packages
        run: dotnet restore
      - name: Build for linux
        run: dotnet publish ${{ env.main_proj_lin }} --configuration ${{ env.configuraton }} --no-restore --framework ${{ env.framework }} --runtime ${{ env.runtime_lin }} -p:PublishProfile=FolderProfile,UseAppHost=true --output publish/${{ env.runtime_lin }}
      - name: Build for windows
        run: dotnet publish ${{ env.main_proj_win }} --configuration ${{ env.configuraton }} --no-restore --framework ${{ env.framework }} --runtime ${{ env.runtime_win }} -p:PublishProfile=FolderProfile --output publish/${{ env.runtime_win }}
      - name: Test
        run: dotnet test ${{ env.test_projects }} --no-restore --verbosity normal

      - name: Archive Linux Release
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'tar.gz'
          directory: ${{ github.workspace }}/publish
          path: linux-64
          filename: 'output/release-${{ env.runtime_lin }}.tar.gz'

      - name: Archive Windows Release
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          directory: ${{ github.workspace }}/publish
          path: win-64
          filename: 'output/release-${{ env.runtime_win }}.zip'

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ github.workspace }}/publish/output/*.*"
